import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"; // Ensure /react is imported

export const apiUrl = process.env.NEXT_PUBLIC_API_URL;

export const Categorie_Api = createApi({
  reducerPath: "Categorie_Api",
  baseQuery: fetchBaseQuery({
    baseUrl: apiUrl,
  }),
  tagTypes: ["Categorie"],
  endpoints: (builder) => ({
    getAllCategorie: builder.query<
      any,
      {
        type?: string;
        rowsPerPage?: number;
        page?: number;
      } | void
    >({
      query: (filters) => {
        const params: Record<string, string | number | boolean> = {};
        // Add filters to the query parameters if they are present
        if (filters) {
          if (filters.type) {
            params.type = filters.type; // Convert number to string
          }
          if (filters.rowsPerPage) {
            params.rowsPerPage = filters.rowsPerPage; // Convert number to string
          }
          if (filters.page) {
            params.page = filters.page; // Convert number to string
          }
        }

        return {
          url: "v2/categorie",
          params, // Use the dynamically constructed params
          method: "GET",
        };
      },
      providesTags: [{ type: "Categorie", id: "LIST" }],
    }),
    getSingle: builder.query<any, string>({
      query: (id: string) => ({
        url: `v2/categorie/shop/${id}`,
        method: "GET",
      }),
      providesTags: [{ type: "Categorie", id: "LIST" }],
    }),
  }),
});

// Correct hook name generated by createApi
export const { useGetSingleQuery,useGetAllCategorieQuery } = Categorie_Api;
